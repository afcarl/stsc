function PlotTLR(path, filenames, save_path)
% PLOTTLR Plots TLR sweeps for provided data.
% =========================================================================

% Load data
for i=1:length(filenames)
    load(sprintf('%s/%s.mat',path,filenames{i}))
end
X = 0:10;
TLR_Source = [TLR_PCA.LR(:,2) TLR_PCA.SVM(:,2) TLR_TSC.LR(:,2)...
              TLR_TSC.SVM(:,2) TLR_STSC.LR(:,2) TLR_STSC.SVM(:,2)];
TLR_Target = [TLR_PCA.LR(:,3) TLR_PCA.SVM(:,3) TLR_TSC.LR(:,3)...
              TLR_TSC.SVM(:,3) TLR_STSC.LR(:,3) TLR_STSC.SVM(:,3)];

% Plot the accuracy on source
fig_source = figure('name','Source Accuracy vs. TLR');
set(fig_source,'Units','pixels','Position',[300 300 800 800]);
hold on;

Curves_source = {};
for i=1:size(TLR_Source,2)
    Curves_source{i} = line(X, TLR_Source(:,i));
end
ylim([45 85]);

% Graphics aesthetics
linestyles = {'-','--','-','--','-','--'};
markers    = {'o','s','v','d','^','h'};
colors     = {[.0 .0 1.0], [.0  .5 .0], [1.0  .0  .0],...
              [.0 .75 .75],[.75 .0 .75],[ .75 .75 .0]};
for i=1:size(TLR_Source,2)
    set(Curves_source{i}                  , ...
        'LineWidth'       , 3             , ...
        'LineStyle'       , linestyles{i} , ...
        'Marker'          , markers{i}    , ...
        'Color'           , colors{i}     , ...
        'MarkerSize'      , 16            , ...
        'MarkerEdgeColor' , colors{i}     , ...
        'MarkerFaceColor' , [1. 1. 1.]     );
end

% Legends and labels
hXLabel = xlabel('Ratio of labeled objects (%)');
hYLabel = ylabel('Accuracy on Source (%)'      );


legends = {'LR','SVM','TSC + LR','TSC + SVM','STSC + LR','STSC + SVM'};
hLegend = legend(legends{:},'Location','SouthEast');

% Fonts and Axes properties
set( [gca, hLegend]              , ...
    'FontName'   , 'Helvetica'   , ...
    'FontSize'   , 28            );
set([hXLabel, hYLabel], ...
    'FontSize'   , 36            );
set(gca, ...
  'Box'         , 'off'     , ...
  'TickDir'     , 'out'     , ...
  'TickLength'  , [.02 .02] , ...
  'XMinorTick'  , 'on'      , ...
  'YMinorTick'  , 'off'     , ...
  'XGrid'       , 'on'      , ...
  'YGrid'       , 'on'      , ...
  'XColor'      , [.1 .1 .1], ...
  'YColor'      , [.1 .1 .1], ...
  'XTick'       , 0:1:10    , ...
  'YTick'       , 0:5:100   , ...
  'LineWidth'   , 1         );

tightfig(fig_source);


% Plot the accuracy on target
fig_target = figure('name','Target Accuracy vs. TLR');
set(fig_target,'Units','pixels','Position',[300 300 800 800]);
hold on;

Curves_target = {};
for i=1:size(TLR_Target,2)
    Curves_target{i} = line(X, TLR_Target(:,i));
end
ylim([5 40]);

% Graphics aesthetics
linestyles = {'-','--','-','--','-','--'};
markers    = {'o','s','v','d','^','h'};
colors     = {[.0 .0 1.0], [.0  .5 .0], [1.0  .0  .0],...
              [.0 .75 .75],[.75 .0 .75],[ .75 .75 .0]};
for i=1:size(TLR_Target,2)
    set(Curves_target{i}                  , ...
        'LineWidth'       , 3             , ...
        'LineStyle'       , linestyles{i} , ...
        'Marker'          , markers{i}    , ...
        'Color'           , colors{i}     , ...
        'MarkerSize'      , 16            , ...
        'MarkerEdgeColor' , colors{i}     , ...
        'MarkerFaceColor' , [1. 1. 1.]     );
end

% Legends and labels
hXLabel = xlabel('Ratio of labeled objects (%)');
hYLabel = ylabel('Accuracy on Target (%)'      );


legends = {'LR','SVM','TSC + LR','TSC + SVM','STSC + LR','STSC + SVM'};
hLegend = legend(legends{:},'Location','SouthEast');

% Fonts and Axes properties
set( [gca, hLegend]              , ...
    'FontName'   , 'Helvetica'   , ...
    'FontSize'   , 28            );
set([hXLabel, hYLabel], ...
    'FontSize'   , 36            );
set(gca, ...
  'Box'         , 'off'     , ...
  'TickDir'     , 'out'     , ...
  'TickLength'  , [.02 .02] , ...
  'XMinorTick'  , 'on'      , ...
  'YMinorTick'  , 'off'     , ...
  'XGrid'       , 'on'      , ...
  'YGrid'       , 'on'      , ...
  'XColor'      , [.0 .0 .0], ...
  'YColor'      , [.0 .0 .0], ...
  'XTick'       , 0:1:10    , ...
  'YTick'       , 0:5:100   , ...
  'LineWidth'   , 1         );

tightfig(fig_target);

if exist('save_path','var')
    set(fig_source, 'PaperPositionMode', 'auto');
    print(fig_source,'-depsc2', sprintf('%s_source.eps',save_path));
    set(fig_target, 'PaperPositionMode', 'auto');
    print(fig_target,'-depsc2', sprintf('%s_target.eps',save_path));
    close all;
end

end
